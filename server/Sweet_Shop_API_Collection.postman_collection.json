{
  "info": {
    "_postman_id": "sweet-shop-api-collection",
    "name": "Sweet Shop Management System API",
    "description": "Complete API collection for Sweet Shop Management System with all endpoints, request bodies, and query parameters",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Root",
      "item": [
        {
          "name": "Welcome Message",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "Test server root endpoint"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sweets",
      "item": [
        {
          "name": "Get All Sweets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"]
            },
            "description": "Get all sweets without any filters"
          },
          "response": []
        },
        {
          "name": "Search Sweets by Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets?name=chocolate",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"],
              "query": [
                {
                  "key": "name",
                  "value": "chocolate",
                  "description": "Search sweets by name (case-insensitive)"
                }
              ]
            },
            "description": "Search sweets by name (case-insensitive partial match)"
          },
          "response": []
        },
        {
          "name": "Search Sweets by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets?category=Milk-Based",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"],
              "query": [
                {
                  "key": "category",
                  "value": "Milk-Based",
                  "description": "Filter sweets by category"
                }
              ]
            },
            "description": "Filter sweets by category"
          },
          "response": []
        },
        {
          "name": "Search Sweets by Name and Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets?name=barfi&category=Chocolate-Based",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"],
              "query": [
                {
                  "key": "name",
                  "value": "barfi",
                  "description": "Search by name"
                },
                {
                  "key": "category",
                  "value": "Chocolate-Based",
                  "description": "Filter by category"
                }
              ]
            },
            "description": "Search sweets with both name and category filters"
          },
          "response": []
        },
        {
          "name": "Check Stock - In Stock Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets/check-stock?inStock=true",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "check-stock"],
              "query": [
                {
                  "key": "inStock",
                  "value": "true",
                  "description": "Get only sweets that are in stock (quantity > 0)"
                }
              ]
            },
            "description": "Get only sweets that are currently in stock"
          },
          "response": []
        },
        {
          "name": "Check Stock - Out of Stock Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets/check-stock?inStock=false",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "check-stock"],
              "query": [
                {
                  "key": "inStock",
                  "value": "false",
                  "description": "Get only sweets that are out of stock (quantity = 0)"
                }
              ]
            },
            "description": "Get only sweets that are out of stock"
          },
          "response": []
        },
        {
          "name": "Check Stock - All Sweets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets/check-stock",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "check-stock"]
            },
            "description": "Get all sweets with stock status information"
          },
          "response": []
        },
        {
          "name": "Get Sweet by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets/1",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "1"]
            },
            "description": "Get a specific sweet by its ID"
          },
          "response": []
        },
        {
          "name": "Add New Sweet",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Chocolate Barfi\",\n  \"category\": \"Chocolate-Based\",\n  \"price\": 45,\n  \"quantity\": 25\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sweets",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"]
            },
            "description": "Create a new sweet with name, category, price, and quantity"
          },
          "response": []
        },
        {
          "name": "Add Sweet - Milk Based",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Rasmalai\",\n  \"category\": \"Milk-Based\",\n  \"price\": 60,\n  \"quantity\": 15\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sweets",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"]
            },
            "description": "Example of adding a milk-based sweet"
          },
          "response": []
        },
        {
          "name": "Add Sweet - Nut Based",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Kaju Katli\",\n  \"category\": \"Nut-Based\",\n  \"price\": 120,\n  \"quantity\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sweets",
              "host": ["{{baseUrl}}"],
              "path": ["sweets"]
            },
            "description": "Example of adding a nut-based sweet"
          },
          "response": []
        },
        {
          "name": "Update Sweet",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Chocolate Barfi\",\n  \"category\": \"Chocolate-Based\",\n  \"price\": 50,\n  \"quantity\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sweets/1",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "1"]
            },
            "description": "Update all fields of a sweet by ID"
          },
          "response": []
        },
        {
          "name": "Restock Sweet",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sweets/1/restock",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "1", "restock"]
            },
            "description": "Update only the quantity/stock of a sweet"
          },
          "response": []
        },
        {
          "name": "Delete Sweet",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sweets/1",
              "host": ["{{baseUrl}}"],
              "path": ["sweets", "1"]
            },
            "description": "Delete a sweet by ID"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Create Order - Single Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": 1001,\n  \"items\": [\n    {\n      \"sweetId\": 1,\n      \"quantity\": 2\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Create a new order with a single item"
          },
          "response": []
        },
        {
          "name": "Create Order - Multiple Items",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": 1002,\n  \"items\": [\n    {\n      \"sweetId\": 1,\n      \"quantity\": 3\n    },\n    {\n      \"sweetId\": 2,\n      \"quantity\": 4\n    },\n    {\n      \"sweetId\": 3,\n      \"quantity\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Create a new order with multiple items"
          },
          "response": []
        },
        {
          "name": "Create Order - Large Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": 4283818990,\n  \"items\": [\n    {\n      \"sweetId\": 4,\n      \"quantity\": 4\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Create a new order with a large token number (BigInt support)"
          },
          "response": []
        },
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Get all orders in the system"
          },
          "response": []
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/ORD001",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "ORD001"]
            },
            "description": "Get a specific order by its ID (format: ORD001, ORD002, etc.)"
          },
          "response": []
        },
        {
          "name": "Get Order by Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/token/1001",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "token", "1001"]
            },
            "description": "Get an order by customer token number"
          },
          "response": []
        },
        {
          "name": "Update Order Status - Complete",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"Completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders/ORD001/status",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "ORD001", "status"]
            },
            "description": "Update order status to Completed"
          },
          "response": []
        },
        {
          "name": "Update Order Status - Pending",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"Pending\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders/ORD001/status",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "ORD001", "status"]
            },
            "description": "Update order status to Pending"
          },
          "response": []
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/ORD001",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "ORD001"]
            },
            "description": "Delete an order and restore stock quantities"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string",
      "description": "Base URL for the Sweet Shop API"
    }
  ]
}
